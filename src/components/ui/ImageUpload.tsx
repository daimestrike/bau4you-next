'use client'

import React, { useState, useRef, useCallback, useEffect } from 'react'
import Image from 'next/image'
import { Upload, X, Loader2, ImageIcon, FileText, AlertCircle } from 'lucide-react'
import { supabase } from '@/lib/supabase'

interface ImageUploadProps {
  value?: string | string[]
  onChange: (value: string | string[]) => void
  multiple?: boolean
  maxFiles?: number
  className?: string
  placeholder?: string
  disabled?: boolean
}

interface UploadedFile {
  file: File
  preview: string
  uploading: boolean
  uploaded: boolean
  url?: string
  error?: string
}

export default function ImageUpload({
  value,
  onChange,
  multiple = false,
  maxFiles = 5,
  className = '',
  placeholder = '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞',
  disabled = false
}: ImageUploadProps) {
  const [files, setFiles] = useState<UploadedFile[]>([])
  const [isDragOver, setIsDragOver] = useState(false)
  const fileInputRef = useRef<HTMLInputElement>(null)

  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage (–µ—â–µ –æ–¥–∏–Ω fallback)
  const getTokenFromLocalStorage = (): string | null => {
    try {
      console.log('üíæ –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage...')
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –∫–ª—é—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Supabase
      const possibleKeys = [
        'sb-gcbwqqwmqjolxxrvfbzz-auth-token',
        'supabase.auth.token',
        'sb-auth-token'
      ]
      
      for (const key of possibleKeys) {
        const item = localStorage.getItem(key)
        if (item) {
          console.log(`üíæ –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç –≤ localStorage: ${key}`)
          try {
            const parsed = JSON.parse(item)
            if (parsed.access_token) {
              console.log('‚úÖ Access token –Ω–∞–π–¥–µ–Ω –≤ localStorage!')
              return parsed.access_token
            }
          } catch (e) {
            console.log(`üíæ –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å ${key}`)
          }
        }
      }
      
      console.log('üíæ –¢–æ–∫–µ–Ω –≤ localStorage –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return null
    } catch (error) {
      console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ localStorage:', error)
      return null
    }
  }

  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –∫—É–∫–æ–≤ –Ω–∞–ø—Ä—è–º—É—é (fallback)
  const getTokenFromCookies = (): string | null => {
    try {
      console.log('üç™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–∫–∏ –Ω–∞–ø—Ä—è–º—É—é...')
      const cookies = document.cookie.split(';')
      console.log('üç™ –í—Å–µ –∫—É–∫–∏:', cookies.map(c => c.trim().split('=')[0]))
      
      // –ò—â–µ–º —Ç–æ–∫–µ–Ω –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
      const tokenPatterns = [
        'sb-gcbwqqwmqjolxxrvfbzz-auth-token',
        'sb-gcbwqqwmqjolxxrvfbzz-auth-token.0',
        'sb-gcbwqqwmqjolxxrvfbzz-auth-token.1',
        'sb-gcbwqqwmqjolxxrvfbzz-auth-token.2',
        'sb-gcbwqqwmqjolxxrvfbzz-auth-token.3',
        'sb-gcbwqqwmqjolxxrvfbzz-auth-token.4'
      ]
      
      const tokenParts: string[] = []
      
      for (const pattern of tokenPatterns) {
        const cookie = cookies.find(c => c.trim().startsWith(pattern + '='))
        if (cookie) {
          const value = cookie.split('=')[1]
          if (value) {
            console.log(`üç™ –ù–∞–π–¥–µ–Ω –∫—É—Å–æ–∫ —Ç–æ–∫–µ–Ω–∞: ${pattern}`)
            if (pattern.includes('.')) {
              tokenParts.push(decodeURIComponent(value))
            } else {
              // –≠—Ç–æ –ø–æ–ª–Ω—ã–π —Ç–æ–∫–µ–Ω
              const decoded = decodeURIComponent(value)
              console.log('üç™ –ü–æ–ª–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω –≤ –∫—É–∫–∞—Ö')
              try {
                const parsed = JSON.parse(decoded)
                return parsed.access_token || null
              } catch (e) {
                console.log('üç™ –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –∫—É–∫–æ–≤')
                return null
              }
            }
          }
        }
      }
      
      // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —á–∞—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞, —Å–æ–±–∏—Ä–∞–µ–º –∏—Ö
      if (tokenParts.length > 0) {
        console.log(`üç™ –ù–∞–π–¥–µ–Ω–æ ${tokenParts.length} —á–∞—Å—Ç–µ–π —Ç–æ–∫–µ–Ω–∞`)
        const fullToken = tokenParts.join('')
        try {
          const parsed = JSON.parse(fullToken)
          return parsed.access_token || null
        } catch (e) {
          console.log('üç™ –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ —á–∞—Å—Ç–µ–π')
          return null
        }
      }
      
      console.log('üç™ –¢–æ–∫–µ–Ω –≤ –∫—É–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return null
    } catch (error) {
      console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∫—É–∫–æ–≤:', error)
      return null
    }
  }

  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
  const getAuthToken = async (): Promise<string | null> => {
    try {
      console.log('üîç –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...')
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –∫—É–∫–æ–≤ (–±—ã—Å—Ç—Ä–µ–µ –∏ –Ω–∞–¥–µ–∂–Ω–µ–µ)
      console.log('üç™ –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –∫—É–∫–æ–≤...')
      const cookieToken = getTokenFromCookies()
      if (cookieToken) {
        console.log('‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω –≤ –∫—É–∫–∞—Ö!')
        return cookieToken
      }
      
      // –ï—Å–ª–∏ –≤ –∫—É–∫–∞—Ö –Ω–µ—Ç, –ø—Ä–æ–±—É–µ–º localStorage
      console.log('üíæ –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ localStorage...')
      const localStorageToken = getTokenFromLocalStorage()
      if (localStorageToken) {
        console.log('‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω –≤ localStorage!')
        return localStorageToken
      }
      
      // –ï—Å–ª–∏ –≤ –∫—É–∫–∞—Ö –∏ localStorage –Ω–µ—Ç, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ Supabase —Å —Ç–∞–π–º–∞—É—Ç–æ–º
      console.log('üîÑ –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é —á–µ—Ä–µ–∑ Supabase (—Å —Ç–∞–π–º–∞—É—Ç–æ–º 5 —Å–µ–∫)...')
      
      const sessionPromise = supabase.auth.getSession()
      const timeoutPromise = new Promise<never>((_, reject) => {
        setTimeout(() => reject(new Error('Timeout')), 5000)
      })
      
      const { data: { session }, error } = await Promise.race([sessionPromise, timeoutPromise])
      
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', error)
        return null
      }
      
      if (!session) {
        console.log('‚ùå –°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ Supabase')
        return null
      }
      
      console.log('‚úÖ –°–µ—Å—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ Supabase:', session.user?.email)
      return session.access_token || null
      
    } catch (error) {
      if (error instanceof Error && error.message === 'Timeout') {
        console.log('‚è∞ –¢–∞–π–º–∞—É—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ —á–µ—Ä–µ–∑ Supabase')
      } else {
        console.error('üí• –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', error)
      }
      
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏–ª–∏ —Ç–∞–π–º–∞—É—Ç–∞ –ø—Ä–æ–±—É–µ–º –≤—Å–µ fallback –º–µ—Ç–æ–¥—ã
      console.log('üîÑ Fallback: –ø—Ä–æ–±—É–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã –µ—â–µ —Ä–∞–∑...')
      return getTokenFromCookies() || getTokenFromLocalStorage()
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –∏–∑ value
  useEffect(() => {
    if (value) {
      const urls = Array.isArray(value) ? value : [value]
      const existingFiles = urls.map((url, index) => ({
        file: new File([], `existing-${index}`, { type: 'image/jpeg' }),
        preview: url,
        uploading: false,
        uploaded: true,
        url
      }))
      setFiles(existingFiles)
    } else {
      setFiles([])
    }
  }, []) // –£–±–∏—Ä–∞–µ–º value –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤
  useEffect(() => {
    const uploadedUrls = files
      .filter(file => file.uploaded && file.url)
      .map(file => file.url!)

    if (uploadedUrls.length > 0) {
      const newValue = multiple ? uploadedUrls : uploadedUrls[0]
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ
      const currentValue = Array.isArray(value) ? value : (value ? [value] : [])
      if (JSON.stringify(uploadedUrls.sort()) !== JSON.stringify(currentValue.sort())) {
        onChange(newValue)
      }
    }
  }, [files, multiple]) // –£–±–∏—Ä–∞–µ–º onChange –∏ value –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ S3
  const uploadFile = async (file: File): Promise<string> => {
    console.log('üì§ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞:', file.name)
    
    const formData = new FormData()
    formData.append('file', file)

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const token = await getAuthToken()
    console.log('üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:', token ? '–¥–∞' : '–Ω–µ—Ç')
    if (token) {
      console.log('üîë –¢–æ–∫–µ–Ω (–ø–µ—Ä–≤—ã–µ 50 —Å–∏–º–≤–æ–ª–æ–≤):', token.substring(0, 50) + '...')
    }
    
    const headers: HeadersInit = {
      // –ù–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Content-Type –¥–ª—è FormData
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º Authorization header –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω
    if (token) {
      headers['Authorization'] = `Bearer ${token}`
      console.log('‚úÖ Authorization header –¥–æ–±–∞–≤–ª–µ–Ω')
    } else {
      console.log('‚ùå –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, Authorization header –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω')
    }

    console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ /api/upload/direct')
    console.log('üìã Headers:', Object.keys(headers))
    console.log('üç™ Credentials: include')
    
    const response = await fetch('/api/upload/direct', {
      method: 'POST',
      body: formData,
      credentials: 'include', // –í–∞–∂–Ω–æ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ cookies
      headers
    })
    
    console.log('üìä –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.status, response.statusText)
    console.log('üìã Response headers:', Object.fromEntries(response.headers.entries()))

    if (!response.ok) {
      const errorText = await response.text()
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (raw):', errorText)
      
      try {
        const error = JSON.parse(errorText)
        console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (parsed):', error)
        throw new Error(error.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏')
      } catch (parseError) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—à–∏–±–∫—É:', parseError)
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${response.status} ${response.statusText}`)
      }
    }

    const result = await response.json()
    console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:', result.publicUrl)
    return result.publicUrl
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  const handleFiles = useCallback(async (selectedFiles: FileList) => {
    if (disabled) return

    const newFiles = Array.from(selectedFiles)
    const totalFiles = files.length + newFiles.length

    if (!multiple && newFiles.length > 1) {
      alert('–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ñ–∞–π–ª')
      return
    }

    if (multiple && totalFiles > maxFiles) {
      alert(`–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: ${maxFiles}`)
      return
    }

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é –¥–ª—è –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    const filesWithPreview: UploadedFile[] = newFiles.map(file => ({
      file,
      preview: URL.createObjectURL(file),
      uploading: true,
      uploaded: false
    }))

    // –ï—Å–ª–∏ –Ω–µ multiple, –∑–∞–º–µ–Ω—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    if (!multiple) {
      setFiles(filesWithPreview)
    } else {
      setFiles(prev => [...prev, ...filesWithPreview])
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
    for (let i = 0; i < filesWithPreview.length; i++) {
      const fileData = filesWithPreview[i]
      try {
        const url = await uploadFile(fileData.file)
        
        setFiles(prev => prev.map(f => 
          f.preview === fileData.preview 
            ? { ...f, uploading: false, uploaded: true, url }
            : f
        ))

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –≤ useEffect

      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error)
        setFiles(prev => prev.map(f => 
          f.preview === fileData.preview 
            ? { ...f, uploading: false, uploaded: false, error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏' }
            : f
        ))
      }
    }
  }, [files.length, multiple, maxFiles, disabled]) // –£–±–∏—Ä–∞–µ–º onChange –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
  const removeFile = useCallback((index: number) => {
    if (disabled) return

    setFiles(prev => prev.filter((_, i) => i !== index))
  }, [disabled])

  // Drag & Drop –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  const handleDragOver = useCallback((e: React.DragEvent) => {
    e.preventDefault()
    if (!disabled) {
      setIsDragOver(true)
    }
  }, [disabled])

  const handleDragLeave = useCallback((e: React.DragEvent) => {
    e.preventDefault()
    setIsDragOver(false)
  }, [])

  const handleDrop = useCallback((e: React.DragEvent) => {
    e.preventDefault()
    setIsDragOver(false)
    
    if (disabled) return
    
    const droppedFiles = e.dataTransfer.files
    if (droppedFiles.length > 0) {
      handleFiles(droppedFiles)
    }
  }, [disabled, handleFiles])

  const handleClick = () => {
    if (!disabled) {
      fileInputRef.current?.click()
    }
  }

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const selectedFiles = e.target.files
    if (selectedFiles) {
      handleFiles(selectedFiles)
    }
  }

  return (
    <div className={`space-y-4 ${className}`}>
      {/* –ó–æ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
      <div
        className={`
          border-2 border-dashed rounded-lg p-6 text-center cursor-pointer transition-colors
          ${isDragOver ? 'border-blue-500 bg-blue-50' : 'border-gray-300'}
          ${disabled ? 'opacity-50 cursor-not-allowed' : 'hover:border-gray-400'}
        `}
        onDragOver={handleDragOver}
        onDragLeave={handleDragLeave}
        onDrop={handleDrop}
        onClick={handleClick}
      >
        <input
          ref={fileInputRef}
          type="file"
          accept="image/*"
          multiple={multiple}
          onChange={handleFileChange}
          className="hidden"
          disabled={disabled}
        />
        
        <Upload className="mx-auto h-12 w-12 text-gray-400 mb-4" />
        <p className="text-gray-600 mb-2">{placeholder}</p>
        <p className="text-sm text-gray-500">
          –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPEG, PNG, WebP, GIF (–¥–æ 10MB)
        </p>
        {multiple && (
          <p className="text-sm text-gray-500">
            –ú–∞–∫—Å–∏–º—É–º —Ñ–∞–π–ª–æ–≤: {maxFiles}
          </p>
        )}
      </div>

      {/* –ü—Ä–µ–≤—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ */}
      {files.length > 0 && (
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
          {files.map((fileData, index) => (
            <div key={index} className="relative group">
              <div className="aspect-square rounded-lg overflow-hidden bg-gray-100 border">
                {fileData.preview ? (
                  <Image
                    src={fileData.preview}
                    alt={`–ü—Ä–µ–≤—å—é ${index + 1}`}
                    width={200}
                    height={200}
                    className="w-full h-full object-cover"
                  />
                ) : (
                  <div className="w-full h-full flex items-center justify-center">
                    <ImageIcon className="h-8 w-8 text-gray-400" />
                  </div>
                )}
                
                {/* –û–≤–µ—Ä–ª–µ–π —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º */}
                {fileData.uploading && (
                  <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
                    <Loader2 className="h-6 w-6 text-white animate-spin" />
                  </div>
                )}
                
                {fileData.error && (
                  <div className="absolute inset-0 bg-red-500 bg-opacity-75 flex items-center justify-center p-2">
                    <p className="text-white text-xs text-center">{fileData.error}</p>
                  </div>
                )}
              </div>
              
              {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è */}
              {!disabled && (
                <button
                  onClick={() => removeFile(index)}
                  className="absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity"
                >
                  <X className="h-4 w-4" />
                </button>
              )}
            </div>
          ))}
        </div>
      )}
    </div>
  )
}