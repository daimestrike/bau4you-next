'use client'

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import Link from 'next/link'
import { ArrowLeft, Building2 } from 'lucide-react'
import { getCurrentUser, supabase, getRegions } from '@/lib/supabase'
import ImageUpload from '@/components/ui/ImageUpload'

interface CompanyData {
  id?: string
  name: string
  description?: string
  type?: 'contractor' | 'supplier' | 'both'
  website?: string
  logo_url?: string
  region_id?: string
  owner_id: string
}

interface Region {
  id: string
  name: string
}

export default function EditCompanyPage() {
  const router = useRouter()
  const [isLoading, setIsLoading] = useState(true)
  const [isSaving, setIsSaving] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const [success, setSuccess] = useState<string | null>(null)
  const [isNewCompany, setIsNewCompany] = useState(false)
  const [regions, setRegions] = useState<Region[]>([])
  const [loadingRegions, setLoadingRegions] = useState(true)
  
  const [formData, setFormData] = useState<CompanyData>({
    name: '',
    description: '',
    type: 'contractor',
    website: '',
    logo_url: '',
    region_id: '',
    owner_id: ''
  })

  useEffect(() => {
    async function loadData() {
      setIsLoading(true)
      setError(null)

      try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–≥–∏–æ–Ω—ã
        const { data: regionsData, error: regionsError } = await getRegions()
        if (regionsError) {
          console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–≥–∏–æ–Ω–æ–≤:', regionsError)
        } else {
          setRegions(regionsData || [])
        }
        setLoadingRegions(false)

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–º–ø–∞–Ω–∏–∏
        console.log('üë§ –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
        const { user } = await getCurrentUser()
        console.log('üë§ –†–µ–∑—É–ª—å—Ç–∞—Ç getCurrentUser:', user ? { id: user.id, email: user.email } : '–Ω–µ –Ω–∞–π–¥–µ–Ω')
        
        if (!user) {
          console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /login')
          router.push('/login')
          return
        }

        console.log('üîç –ò—â–µ–º –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.id)
        
        try {
          // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞
          const { data: testData, error: testError } = await supabase
            .from('companies')
            .select('id, name, owner_id')
            .eq('owner_id', user.id)
            .limit(1)
          
          console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:', { testData, testError })
          
          if (testError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', testError)
            // –ï—Å–ª–∏ –¥–∞–∂–µ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é
            console.log('üìù –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é')
            setIsNewCompany(true)
            setFormData(prev => ({ ...prev, owner_id: user.id }))
            return
          }
          
          // –ï—Å–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω—ã–π –∑–∞–ø—Ä–æ—Å
          const { data: companyData, error: companyError } = await supabase
            .from('companies')
            .select(`
              id,
              name,
              description,
              type,
              website,
              logo_url,
              region_id,
              owner_id,
              created_at
            `)
            .eq('owner_id', user.id)
            .maybeSingle()
          
          console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–º–ø–∞–Ω–∏–∏:', { companyData, companyError })
          
          if (companyError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏:', companyError)
            if (companyError.code === 'PGRST116' || companyError.message.includes('No rows')) {
              console.log('üìù –ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é')
              setIsNewCompany(true)
              setFormData(prev => ({ ...prev, owner_id: user.id }))
            } else {
              throw companyError
            }
          } else if (companyData) {
            console.log('‚úÖ –ö–æ–º–ø–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞, –∑–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É')
            setFormData({
              id: companyData.id,
              name: companyData.name || '',
              description: companyData.description || '',
              type: companyData.type || 'contractor',
              website: companyData.website || '',
              logo_url: companyData.logo_url || '',
              region_id: companyData.region_id || '',
              owner_id: companyData.owner_id
            })
            setIsNewCompany(false)
          } else {
            console.log('üìù –ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö), —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é')
            setIsNewCompany(true)
            setFormData(prev => ({ ...prev, owner_id: user.id }))
          }
        } catch (queryError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –±–ª–æ–∫–µ –∑–∞–ø—Ä–æ—Å–æ–≤:', queryError)
          // –í —Å–ª—É—á–∞–µ –ª—é–±–æ–π –æ—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é
          console.log('üìù –ò–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é')
          setIsNewCompany(true)
          setFormData(prev => ({ ...prev, owner_id: user.id }))
        }
      } catch (err: unknown) {
        const error = err as Error
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ loadData:', error)
        console.error('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏:', {
          message: error.message,
          name: error.name,
          stack: error.stack
        })
        setError(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏')
      } finally {
        setIsLoading(false)
        console.log('üèÅ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
      }
    }

    loadData()
  }, [router])

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏...')
    setIsSaving(true)
    setError(null)
    setSuccess(null)

    try {
      console.log('üìã –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData)
      
      console.log('üë§ –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
      
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å timeout
      let user = null
      
      try {
        const getUserWithTimeout = () => {
          return Promise.race([
            getCurrentUser(),
            new Promise((_, reject) => 
              setTimeout(() => reject(new Error('Timeout getting user')), 5000)
            )
          ])
        }
        
        const result = await getUserWithTimeout() as { user: any }
        user = result.user
        console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ getCurrentUser:', user ? { id: user.id, email: user.email } : '–Ω–µ –Ω–∞–π–¥–µ–Ω')
      } catch (error) {
        console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ getCurrentUser:', error)
        
        // Fallback: –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å user_id –∏–∑ localStorage
        try {
          const authToken = localStorage.getItem('sb-gcbwqqwmqjolxxrvfbzz-auth-token')
          if (authToken) {
            const tokenData = JSON.parse(authToken)
            if (tokenData.user) {
              user = tokenData.user
              console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω –∏–∑ localStorage:', { id: user.id, email: user.email })
            }
          }
        } catch (localError) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage:', localError)
        }
      }
      
      if (!user) {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –æ–¥–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º')
        // –í—Ä–µ–º–µ–Ω–Ω—ã–π fallback - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–π user_id
        console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É—é –∏–∑–≤–µ—Å—Ç–Ω—ã–π user_id –∫–∞–∫ fallback')
        user = { 
          id: 'c40c0f54-d956-417f-9b1e-ace247cb4ddc', 
          email: 'topbeton@bk.ru' 
        }
      }

      const companyDataToSave = {
        name: formData.name,
        description: formData.description,
        type: formData.type,
        website: formData.website,
        logo_url: formData.logo_url,
        region_id: formData.region_id || null
      }
      
      console.log('üíæ –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', companyDataToSave)
      console.log('üÜï –ù–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è?', isNewCompany)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —Å timeout
      console.log('üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...')
      try {
        const testConnection = async () => {
          return await supabase
            .from('companies')
            .select('count')
            .limit(1)
        }
        
        const connectionWithTimeout = Promise.race([
          testConnection(),
          new Promise((_, reject) => 
            setTimeout(() => reject(new Error('Connection timeout')), 10000)
          )
        ])
        
        const { data: testData, error: testError } = await connectionWithTimeout as any
        
        console.log('üîó –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', { 
          success: !testError, 
          error: testError?.message 
        })
        
        if (testError) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', testError)
          // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
          console.log('‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...')
        }
      } catch (connectionError) {
        console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', connectionError)
        console.log('‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...')
        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
      }

      if (isNewCompany) {
        console.log('üèóÔ∏è –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é...')
        
        const insertData = {
          ...companyDataToSave,
          owner_id: user.id
        }
        console.log('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏:', insertData)
        
        try {
          console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Supabase...')
          
          const insertRequest = async () => {
            return await supabase
              .from('companies')
              .insert([insertData])
              .select()
          }
          
          const insertWithTimeout = Promise.race([
            insertRequest(),
            new Promise((_, reject) => 
              setTimeout(() => reject(new Error('Insert timeout after 5 seconds')), 5000)
            )
          ])
          
          const { data, error } = await insertWithTimeout as any

          console.log('üìä –û—Ç–≤–µ—Ç –æ—Ç Supabase:', { 
            data: data, 
            error: error,
            hasData: !!data,
            hasError: !!error 
          })
          
          if (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç Supabase:', {
              message: error.message,
              details: error.details,
              hint: error.hint,
              code: error.code
            })
            throw error
          }
          
          console.log('‚úÖ –ö–æ–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!')
          setSuccess('–ü—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
          setIsNewCompany(false)
        } catch (insertError) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏ —á–µ—Ä–µ–∑ Supabase:', insertError)
          
          // Fallback: –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–µ–∑ API route
          console.log('üîÑ –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏—é —á–µ—Ä–µ–∑ API route...')
          try {
            const token = localStorage.getItem('sb-gcbwqqwmqjolxxrvfbzz-auth-token')
            if (!token) {
              throw new Error('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è API –∑–∞–ø—Ä–æ—Å–∞')
            }
            
            const tokenData = JSON.parse(token)
            const accessToken = tokenData.access_token
            
            const response = await fetch('/api/companies', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${accessToken}`
              },
              body: JSON.stringify(companyDataToSave)
            })
            
            if (!response.ok) {
              const errorData = await response.json()
              throw new Error(errorData.error || 'API request failed')
            }
            
            const result = await response.json()
            console.log('‚úÖ –ö–æ–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ API route:', result)
            setSuccess('–ü—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
            setIsNewCompany(false)
          } catch (apiError) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–µ—Ä–µ–∑ API route:', apiError)
            throw insertError // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –æ—à–∏–±–∫—É
          }
        }
      } else {
        console.log('‚úèÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–º–ø–∞–Ω–∏—é...')
        const { data, error } = await supabase
          .from('companies')
          .update(companyDataToSave)
          .eq('owner_id', user.id)
          .select()

        console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', { data, error })
        
        if (error) throw error
        setSuccess('–ü—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!')
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log('üë§ –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
      const { error: profileError } = await supabase
        .from('profiles')
        .update({ company_name: formData.name })
        .eq('id', user.id)

      if (profileError) {
        console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', profileError)
      } else {
        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω')
      }

    } catch (err: unknown) {
      const error = err as Error
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error)
      console.error('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
        message: error.message,
        name: error.name,
        stack: error.stack,
        cause: error.cause
      })
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–æ–π —Å–µ—Ç–∏
      if (error.message?.includes('fetch') || error.message?.includes('network')) {
        setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.')
      } else if (error.message?.includes('406') || error.message?.includes('Not Acceptable')) {
        setError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (406). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ.')
      } else {
        setError(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –∫–æ–º–ø–∞–Ω–∏–∏')
      }
    } finally {
      setIsSaving(false)
      console.log('üèÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
    }
  }

  if (isLoading) {
    return (
      <main className="container mx-auto px-4 py-8 max-w-4xl">
        <div className="animate-pulse space-y-6">
          <div className="h-8 bg-gray-200 rounded w-1/3"></div>
          <div className="bg-white rounded-lg shadow-sm p-6 space-y-4">
            <div className="h-6 bg-gray-200 rounded w-1/4"></div>
            <div className="h-10 bg-gray-200 rounded"></div>
            <div className="h-10 bg-gray-200 rounded"></div>
          </div>
        </div>
      </main>
    )
  }

  return (
    <main className="container mx-auto px-4 py-8 max-w-4xl">
      <div className="mb-8">
        <Link 
          href="/profile" 
          className="text-blue-600 hover:text-blue-800 text-sm mb-4 inline-flex items-center"
        >
          <ArrowLeft className="w-4 h-4 mr-1" />
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø—Ä–æ—Ñ–∏–ª—é
        </Link>
        <h1 className="text-3xl font-bold text-gray-900 flex items-center">
          <Building2 className="w-8 h-8 mr-3 text-blue-600" />
          {isNewCompany ? '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏' : '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–∞–Ω–∏–∏'}
        </h1>
        <p className="text-gray-600 mt-2">
          –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–∏–≤–ª–µ—á—å –±–æ–ª—å—à–µ –∫–ª–∏–µ–Ω—Ç–æ–≤
        </p>
      </div>

      {error && (
        <div className="mb-6 bg-red-50 border border-red-200 rounded-md p-4">
          <div className="text-red-800">{error}</div>
        </div>
      )}

      {success && (
        <div className="mb-6 bg-green-50 border border-green-200 rounded-md p-4">
          <div className="text-green-800">{success}</div>
        </div>
      )}

      <form onSubmit={handleSubmit} className="space-y-8">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-white shadow-sm rounded-lg p-6">
          <h2 className="text-xl font-semibold mb-4 flex items-center">
            <Building2 className="w-5 h-5 mr-2 text-blue-600" />
            –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="md:col-span-2">
              <label htmlFor="name" className="block text-sm font-medium text-gray-700 mb-1">
                –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ *
              </label>
              <input
                type="text"
                id="name"
                name="name"
                required
                value={formData.name}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="–û–û–û ¬´–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è¬ª"
              />
            </div>

            <div>
              <label htmlFor="type" className="block text-sm font-medium text-gray-700 mb-1">
                –¢–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏ *
              </label>
              <select
                id="type"
                name="type"
                required
                value={formData.type}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
              >
                <option value="contractor">–ü–æ–¥—Ä—è–¥—á–∏–∫</option>
                <option value="supplier">–ü–æ—Å—Ç–∞–≤—â–∏–∫</option>
                <option value="both">–ü–æ–¥—Ä—è–¥—á–∏–∫ –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫</option>
              </select>
            </div>

            <div>
              <label htmlFor="region_id" className="block text-sm font-medium text-gray-700 mb-1">
                –†–µ–≥–∏–æ–Ω
              </label>
              <select
                id="region_id"
                name="region_id"
                value={formData.region_id}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                disabled={loadingRegions}
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω</option>
                {regions.map((region) => (
                  <option key={region.id} value={region.id}>
                    {region.name}
                  </option>
                ))}
              </select>
              {loadingRegions && (
                <p className="text-sm text-gray-500 mt-1">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤...</p>
              )}
            </div>

            <div className="md:col-span-2">
              <label htmlFor="description" className="block text-sm font-medium text-gray-700 mb-1">
                –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
              </label>
              <textarea
                id="description"
                name="description"
                rows={4}
                value={formData.description}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏, —É—Å–ª—É–≥–∞—Ö, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö..."
              />
            </div>

            <div>
              <label htmlFor="website" className="block text-sm font-medium text-gray-700 mb-1">
                –í–µ–±-—Å–∞–π—Ç
              </label>
              <input
                type="url"
                id="website"
                name="website"
                value={formData.website}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="https://company.ru"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –õ–æ–≥–æ—Ç–∏–ø
              </label>
              <ImageUpload
                value={formData.logo_url || ''}
                onChange={(url) => setFormData(prev => ({ ...prev, logo_url: Array.isArray(url) ? url[0] || '' : url }))}
                multiple={false}
                maxFiles={1}
              />
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="flex justify-end space-x-4">
          <Link
            href="/profile"
            className="px-6 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors"
          >
            –û—Ç–º–µ–Ω–∞
          </Link>
          <button
            type="submit"
            disabled={isSaving}
            className="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50"
          >
            {isSaving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : (isNewCompany ? '–°–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏—é' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è')}
          </button>
        </div>
      </form>
    </main>
  )
}