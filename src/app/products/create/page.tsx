'use client'

import { useState, useCallback } from 'react'
import { useRouter } from 'next/navigation'
import Link from 'next/link'
import { supabase } from '@/lib/supabase'
import ImageUpload from '@/components/ui/ImageUpload'

interface ProductFormData {
  name: string
  description: string
  price: number | ''
  discount: number | ''
  category: string
  images: string[]
  stock_quantity: number | ''
  specifications: string
}

export default function CreateProductPage() {
  const router = useRouter()
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const [success, setSuccess] = useState<string | null>(null)
  const [formData, setFormData] = useState<ProductFormData>({
    name: '',
    description: '',
    price: '',
    discount: '',
    category: '',
    images: [],
    stock_quantity: '',
    specifications: ''
  })

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value, type } = e.target
    
    if (type === 'checkbox') {
      const checked = (e.target as HTMLInputElement).checked
      setFormData(prev => ({
        ...prev,
        [name]: checked
      }))
    } else {
      setFormData(prev => ({
        ...prev,
        [name]: ['price', 'discount', 'stock_quantity'].includes(name) 
          ? (value === '' ? '' : Number(value)) 
          : value
      }))
    }
  }

  const handleImagesChange = useCallback((images: string | string[]) => {
    console.log('üñºÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', images)
    setFormData(prev => ({
      ...prev,
      images: Array.isArray(images) ? images : (images ? [images] : [])
    }))
  }, [])

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
    if (isLoading) {
      console.log('‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤')
      return
    }
    
    setIsLoading(true)
    setError(null)
    setSuccess(null)
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ - –±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã –º–∏–Ω–∏–º—É–º
    const startTime = Date.now()

    try {
      console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞...')
      console.log('üìù –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData)
      
      // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
      const productData: Record<string, unknown> = {
        name: formData.name,
        description: formData.description,
        price: formData.price === '' ? 0 : Number(formData.price),
        category: formData.category,
        status: 'active'
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ
      if (formData.images && formData.images.length > 0) {
        productData.images = formData.images
      }
      
      if (formData.specifications && formData.specifications.trim() !== '') {
        productData.specifications = formData.specifications
      }
      
      if (formData.discount !== '' && formData.discount !== null) {
        productData.discount = Number(formData.discount)
      }
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º stock_quantity, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ - —Ç–æ 0
      productData.stock_quantity = formData.stock_quantity !== '' && formData.stock_quantity !== null 
        ? Number(formData.stock_quantity) 
        : 0
      


      console.log('üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞:', productData)

      console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...')
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è API –∑–∞–ø—Ä–æ—Å–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
      let token = null
      try {
        console.log('üîç –í—ã–∑—ã–≤–∞–µ–º supabase.auth.getSession() —Å —Ç–∞–π–º–∞—É—Ç–æ–º 10 —Å–µ–∫—É–Ω–¥...')
        const sessionPromise = supabase.auth.getSession()
        const timeoutPromise = new Promise((_, reject) => 
          setTimeout(() => reject(new Error('Session timeout')), 10000)
        )
        
        const { data: { session }, error: sessionError } = await Promise.race([sessionPromise, timeoutPromise]) as any
        
        if (sessionError) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Å—Å–∏–∏:', sessionError)
        }
        
        token = session?.access_token
        console.log('üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:', !!token)
        console.log('üìã Session –¥–∞–Ω–Ω—ã–µ:', session ? '–µ—Å—Ç—å' : '–Ω–µ—Ç')
        console.log('üë§ User ID:', session?.user?.id || '–Ω–µ –Ω–∞–π–¥–µ–Ω')
        
        // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø—Ä—è–º—É—é
        if (!token) {
          console.log('üîÑ –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø—Ä—è–º—É—é...')
          const { data: { user }, error: userError } = await supabase.auth.getUser()
          if (user && !userError) {
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –Ω–∞–ø—Ä—è–º—É—é:', user.id)
            // –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é
            await supabase.auth.refreshSession()
            const { data: { session: newSession } } = await supabase.auth.getSession()
            token = newSession?.access_token
            console.log('üîÑ –¢–æ–∫–µ–Ω –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', !!token)
          }
        }
      } catch (authError) {
        console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', authError)
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω fallback')
      }
      
      console.log('‚úÖ –¢–æ–∫–µ–Ω –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ API –∑–∞–ø—Ä–æ—Å—É...')

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API
      const headers: Record<string, string> = {
        'Content-Type': 'application/json'
      }
      
      if (token) {
        headers['Authorization'] = `Bearer ${token}`
      }

      const apiUrl = `${window.location.origin}/api/products`
      console.log('üåê API URL:', apiUrl)
      console.log('üìã Headers:', headers)
      console.log('üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', JSON.stringify(productData, null, 2))

      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º fetch –∑–∞–ø—Ä–æ—Å...')
      const response = await Promise.race([
        fetch(apiUrl, {
          method: 'POST',
          headers,
          body: JSON.stringify(productData)
        }),
        new Promise((_, reject) => 
          setTimeout(() => reject(new Error('Timeout: –∑–∞–ø—Ä–æ—Å –ø—Ä–µ–≤—ã—Å–∏–ª 30 —Å–µ–∫—É–Ω–¥')), 30000)
        )
      ]) as Response

      console.log('üì° –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞, —Å—Ç–∞—Ç—É—Å:', response.status)
      console.log('üìã Response headers:', Object.fromEntries(response.headers.entries()))
      
      const result = await response.json()
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç API:', result)

      if (!response.ok) {
        console.error('‚ùå –û—à–∏–±–∫–∞ API:', result)
        console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è...')
        
        // Fallback: –ø—Ä—è–º–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Supabase
        try {
          const { createProduct } = await import('@/lib/supabase')
          const fallbackResult = await createProduct(productData)
          
          if (fallbackResult.error) {
            throw new Error(fallbackResult.error.message)
          }
          
          console.log('‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ fallback –º–µ—Ç–æ–¥:', fallbackResult.data)
          setSuccess('–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏...')
          
          setTimeout(() => {
            router.push('/products/manage')
          }, 2000)
          return
        } catch (fallbackError) {
          console.error('‚ùå Fallback —Ç–∞–∫–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', fallbackError)
          throw new Error(result?.error || (fallbackError instanceof Error ? fallbackError.message : String(fallbackError)) || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞')
        }
      }

      console.log('‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ —á–µ—Ä–µ–∑ API:', result.data)
      setSuccess('–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏...')
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—Ö–∞
      setTimeout(() => {
        router.push('/products/manage')
      }, 2000)
      
    } catch (err: unknown) {
      const error = err as Error
      console.error('üí• –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error)
      
      let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞'
      
      if (error.message) {
        errorMessage = error.message
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (error.message?.includes('listener indicated an asynchronous response')) {
        errorMessage = '–û—à–∏–±–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞: –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –∏–ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à.'
      }
      
      setError(errorMessage)
    } finally {
      // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ø–∞–º–∞
      const elapsed = Date.now() - startTime
      const minDelay = 2000 // 2 —Å–µ–∫—É–Ω–¥—ã –º–∏–Ω–∏–º—É–º
      
      if (elapsed < minDelay) {
        await new Promise(resolve => setTimeout(resolve, minDelay - elapsed))
      }
      
      setIsLoading(false)
    }
  }

  return (
    <main className="container mx-auto px-4 py-8 max-w-4xl">
      <div className="mb-8">
        <Link 
          href="/products" 
          className="text-blue-600 hover:text-blue-800 mb-4 inline-flex items-center"
        >
          ‚Üê –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º
        </Link>
        <h1 className="text-3xl font-bold text-gray-900">–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç</h1>
        <p className="text-gray-600 mt-1">–†–∞–∑–º–µ—Å—Ç–∏—Ç–µ –≤–∞—à —Ç–æ–≤–∞—Ä –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ</p>
      </div>

      {error && (
        <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-6">
          {error}
        </div>
      )}

      {success && (
        <div className="bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded mb-6">
          {success}
        </div>
      )}

      <form onSubmit={handleSubmit} className="space-y-6">
        <div className="bg-white shadow-sm rounded-lg p-6">
          <h2 className="text-xl font-semibold mb-4">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
          
          <div className="grid grid-cols-1 gap-6">
            <div>
              <label htmlFor="name" className="block text-sm font-medium text-gray-700 mb-1">
                –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *
              </label>
              <input
                type="text"
                id="name"
                name="name"
                required
                value={formData.name}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö–∏—Ä–ø–∏—á –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–ª–Ω–æ—Ç–µ–ª—ã–π"
              />
            </div>

            <div>
              <label htmlFor="category" className="block text-sm font-medium text-gray-700 mb-1">
                –ö–∞—Ç–µ–≥–æ—Ä–∏—è *
              </label>
              <select
                id="category"
                name="category"
                required
                value={formData.category}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                <option value="building_materials">–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</option>
                <option value="tools">–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</option>
                <option value="equipment">–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</option>
                <option value="plumbing">–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞</option>
                <option value="electrical">–≠–ª–µ–∫—Ç—Ä–∏–∫–∞</option>
                <option value="finishing_materials">–û—Ç–¥–µ–ª–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</option>
                <option value="furniture">–ú–µ–±–µ–ª—å</option>
                <option value="other">–î—Ä—É–≥–æ–µ</option>
              </select>
            </div>

            <div>
              <label htmlFor="description" className="block text-sm font-medium text-gray-700 mb-1">
                –û–ø–∏—Å–∞–Ω–∏–µ *
              </label>
              <textarea
                id="description"
                name="description"
                required
                rows={4}
                value={formData.description}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞"
              />
            </div>

            <div>
              <label htmlFor="specifications" className="block text-sm font-medium text-gray-700 mb-1">
                –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
              </label>
              <textarea
                id="specifications"
                name="specifications"
                rows={3}
                value={formData.specifications}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="–†–∞–∑–º–µ—Ä—ã, –≤–µ—Å, –º–∞—Ç–µ—Ä–∏–∞–ª, —Ü–≤–µ—Ç –∏ –¥—Ä—É–≥–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏"
              />
            </div>
          </div>
        </div>

        <div className="bg-white shadow-sm rounded-lg p-6">
          <h2 className="text-xl font-semibold mb-4">–¶–µ–Ω–∞ –∏ –Ω–∞–ª–∏—á–∏–µ</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label htmlFor="price" className="block text-sm font-medium text-gray-700 mb-1">
                –¶–µ–Ω–∞ (‚ÇΩ) *
              </label>
              <input
                type="number"
                id="price"
                name="price"
                required
                min="0"
                step="0.01"
                value={formData.price}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="0.00"
              />
              <p className="text-sm text-gray-500 mt-1">
                –£–∫–∞–∂–∏—Ç–µ 0, –µ—Å–ª–∏ —Ü–µ–Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø–æ –∑–∞–ø—Ä–æ—Å—É
              </p>
            </div>

            <div>
              <label htmlFor="discount" className="block text-sm font-medium text-gray-700 mb-1">
                –°–∫–∏–¥–∫–∞ (%)
              </label>
              <input
                type="number"
                id="discount"
                name="discount"
                min="0"
                max="100"
                step="1"
                value={formData.discount}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="0"
              />
            </div>

            <div>
              <label htmlFor="stock_quantity" className="block text-sm font-medium text-gray-700 mb-1">
                –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ
              </label>
              <input
                type="number"
                id="stock_quantity"
                name="stock_quantity"
                min="0"
                step="1"
                value={formData.stock_quantity}
                onChange={handleInputChange}
                className="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="0"
              />
            </div>


          </div>
        </div>

        <div className="bg-white shadow-sm rounded-lg p-6">
          <h2 className="text-xl font-semibold mb-4">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞</h2>
          
          <ImageUpload
            value={formData.images}
            onChange={handleImagesChange}
            multiple={true}
            maxFiles={5}
            placeholder="–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞"
            disabled={isLoading}
          />
          
          <p className="text-sm text-gray-500 mt-4">
            –î–æ–±–∞–≤—å—Ç–µ –¥–æ 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞. –ü–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–µ.
            –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPEG, PNG, WebP, GIF (–¥–æ 10MB –∫–∞–∂–¥–æ–µ).
          </p>
        </div>

        <div className="flex justify-end space-x-4">
          <Link
            href="/products"
            className="px-6 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors"
          >
            –û—Ç–º–µ–Ω–∞
          </Link>
          <button
            type="submit"
            disabled={isLoading}
            className="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
          >
            {isLoading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç'}
          </button>
        </div>
      </form>
    </main>
  )
}